@model Nepaltech.Models.Forms.BatchChickenFeedModel

@{
    ViewBag.Title = "Create";

}
<form action="@(Url.Action("Create"))" method="post" class="nt-form">
    @Html.HiddenFor(model => model.BatchId)
    @Html.HiddenFor(model => model.BreedId)
    
    <div class="row">
        <div class="col-md-offset-0 col-md-2"> <div> <label class="control-label" for="batchid">BatchId</label> </div> </div>
        <div class="col-md-offset-0 col-md-3"> <div> @Html.DisplayFor(m => m.BatchCode) </div> </div>
    </div>
    <div class="row">
        <div class="col-md-offset-0 col-md-2"> <div> <label class="control-label" for="breed">Breed</label> </div> </div>
        <div class="col-md-offset-0 col-md-3"> <div> @Html.DisplayFor(m => m.Breed) </div> </div>
    
        <div class="col-md-offset-0 col-md-2"> <div> <label class="control-label" for="breedtype">BreedType</label> </div> </div>
        <div class="col-md-offset-0 col-md-3"> <div> @Html.DisplayFor(m => m.BreedType) </div> </div>
    </div>

    <div class="row">
        <div class="col-md-offset-0 col-md-2"> <div> <label class="control-label" for="age">Age</label> </div> </div>
        <div class="col-md-offset-0 col-md-3"> <div> @Html.DisplayFor(m => m.Age) days</div> </div>
    </div>

    <div class="row">
        <div class="col-md-offset-0 col-md-2">
            <label class="control-label" for="DateEntry">DateEntry</label>
        </div>
        <div class="col-md-offset-0 col-md-3">
            <div class="col-10">
                @(Html.Kendo().DatePickerFor(m => m.DateEntry)
                 .Name("DateEntry")
                 .Value(DateTime.Now)
                  .HtmlAttributes(new { style = "width: 100%", title = "datepicker" })
                )
            </div>
        </div>
    </div>

    <table class="table">
        <tr>
            <th>Room No </th>
            <th>Feed Name </th>
            <th>MaleQuantity</th>
            <th>FemaleQuantity</th>
        </tr>
        <tr>
            @for (int i = 0; i < Model.ChickenFeeds.Count; i++)
            {
                var feedID = Model.ChickenFeeds[0].FeedId == null? "ChickenFeeds["+i+"].FeedId" : "ChickenFeeds["+i+"].FeedId";
            <tr>
                <td>@(Model.ChickenFeeds[i].Location)@Html.HiddenFor(model => model.ChickenFeeds[i].LocationId)</td>
                <td>
                    @(Html.Kendo().DropDownListFor(m => m.ChickenFeeds[i].FeedId)
                    
              //.Name("FeedId")
             
              .HtmlAttributes(new { style = "width:100%" })
              .OptionLabel("Select Feed...")
              .DataTextField("FeedName")
              .DataValueField("Id")
              
              .DataSource(source =>
              
              {
                  source.Read(read =>
                  {
                      read.Action("GetCascadeBreedFeed", "ChickenFeeds", new { breeds = Model.BreedId });
                      //.Data("filterProducts");
                      

                  });
              }))
     
              
                    
                    @Html.ValidationMessageFor(model => model.ChickenFeeds[i].FeedId, "", new { @class = "text-danger" })
                </td>
            
                <td>
                    @Html.Kendo().TextBoxFor(m => m.ChickenFeeds[i].MaleQuantity)
                    @Html.ValidationMessageFor(model => model.ChickenFeeds[i].MaleQuantity, "", new { @class = "text-danger" })
            </td>

            <td>
                @Html.Kendo().TextBoxFor(m => m.ChickenFeeds[i].FemaleQuantity)
                @Html.ValidationMessageFor(model => model.ChickenFeeds[i].FemaleQuantity, "", new { @class = "text-danger" })
        </td>
    </tr>
            }
        </table>
    @*<input type="text" id="txtMale" name="txtMale"/><input type="text" id="txtFemale" name="txtFemale"/>*@
   
        <div>
            <input type="submit" value="save" class="btn btn-default" />
            @Html.ActionLink("Cancel", "Details", "Batch", new { id = Model.BatchId }, new { @class = "btn btn-primary" })
        </div>
    </form>

<script type="text/javascript">
    for(i=0;i<@Model.ChickenFeeds.Count; i++)
    {
        $("#FeedId").change(function () {
            //var a = $("#feedID").val();
      //console.log(a);
           
            debugger;
            $.ajax({
                type: "Get",
                url: '@Url.Action("GetCascadeBreedFeedQuantity", "ChickenFeeds")',
                data: { feedid: $("#FeedId").val(), breedid: $("#BreedId").val() },
                dataType: "json",
                success: function (data) {
                    $("#ChickenFeeds_0__MaleQuantity").val(data[0].MaleQuantity);
                    $("#ChickenFeeds_0__FemaleQuantity").val(data[0].FemaleQuantity);

                    //$("#txtMale").val(data[0].MaleQuantity);
                    //$("#txtFemale").val(data[0].FemaleQuantity);
                    //console.log(data);
                }
            });
        })
    }

</script>


@*<script type="text/javascript">
    for(i=0;i<@Model.ChickenFeeds.Count; i++)
    {
        function onSelect(e) {
   
            //var a = $("#feedID").val();
      //console.log(a);
            var dataitem=this.dataitem(e.item);
            console.log(dataitem.FeedId);

            debugger;
            $.ajax({
                type: "Get",
                url: '@Url.Action("GetCascadeBreedFeedQuantity", "ChickenFeeds")',
                data: { feedid:dataitem.Id
                    , breedid: $("#BreedId").val() },
                dataType: "json",
                success: function (data) {
                    $("#ChickenFeeds_0__MaleQuantity").val(data[0].MaleQuantity);
                    $("#ChickenFeeds_0__FemaleQuantity").val(data[0].FemaleQuantity);

                    //$("#txtMale").val(data[0].MaleQuantity);
                    //$("#txtFemale").val(data[0].FemaleQuantity);
                    //console.log(data);
                }
            });
        }
    }

</script>*@































    @*<h2>Create</h2>
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.DateCreated)

        <form action="@(Url.Action("Create"))" method="post" class="nt-form" >

            <div class="row">
                <div class="col-md-offset-0 col-md-2"> <div> <label class="control-label" for="batchid">BatchId</label> </div> </div>
                <div class="col-md-offset-0 col-md-3"> <div> @Html.DisplayFor(m => m.BatchChickenId, new { @name = "BatchChickenId" }) </div> </div>
            </div>
            <div class="row">
                <div class="col-md-offset-0 col-md-2"> <div> <label class="control-label" for="farmName">Farm Name</label> </div> </div>
                <div class="col-md-offset-0 col-md-3"> <div> @Html.DisplayFor(m => m.FarmName) </div> </div>

                <div class="col-md-offset-1 col-md-2"> <div> <label class="control-label" for="location">Location</label> </div> </div>
                <div class="col-md-offset-0 col-md-3"> <div> @Html.DisplayFor(m => m.Location) </div> </div>
            </div>
            <div class="row">
                <div class="col-md-offset-0 col-md-2"> <div> <label class="control-label" for="breed">breed</label> </div> </div>
                <div class="col-md-offset-0 col-md-3"> <div>@Html.DisplayFor(m => m.Breed)</div> </div>
                <div class="col-md-offset-1 col-md-2"> <div> <label class="control-label" for="vaccine">Select Feed</label> </div> </div>
                <div class="col-md-offset-0 col-md-3">
                    @(Html.Kendo().DropDownList()
                      .Name("FeedId")
                      .HtmlAttributes(new { style = "width:100%" })
                      .OptionLabel("Select Feed...")
                      .DataTextField("FeedName")
                      .DataValueField("Id")
                      .DataSource(source =>
                      {
                          source.Read(read =>
                          {
                              read.Action("GetCascadeBreedFeed", "ChickenFeeds").Data("filterProducts");

                          });
                      })
                    )

                </div>
            </div>
            <div class="row">
                <div class="col-md-2"> <div> <label class="control-label" for="gender">Gender</label> </div> </div>

                <select class="form-control" id="GenderId" name="GenderId">
                    <option value="Male">Male</option>
                    <option value="Female">Female</option>
                </select>
                <div class="col-md-offset-6 col-md-2"> <div> <label class="control-label" for="ActualQuantity">ActualQuantity</label> </div> </div>
                <div class="col-md-offset-0 col-md-3">
                    <div class="col-10"> <input class="form-control" name="ActualQuantity"> </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-offset-0 col-md-2"> <div> <label class="control-label" for="DateEntry">DateEntry</label> </div> </div>
                <div class="col-md-offset-0 col-md-3">
                    <div class="col-10" name="DateEntry">
                        @(Html.Kendo().DatePicker()
                          .Name("DateEntry")
                          .Value("10/10/2017")
                          .HtmlAttributes(new { style = "width: 100%", title = "datepicker" })
                        )
                    </div>
                </div>
            </div>




            <div>
                <input type="submit" value="Save" class="btn btn-default" />
                @Html.ActionLink("Cancel", "Index", "AddChicken", new { @class = "btn btn-primary" })
                @Html.ActionLink("Cancel", "Details", "AddChicken", new { @id = Model.BatchChickenId }, new { @class = "btn btn-primary" })*@
    @*</div>
        </form>
        <script>
            function filterProducts() {
                return {

                    breeds: "@Model.BreedId"
                };
            }
        </script>*@
