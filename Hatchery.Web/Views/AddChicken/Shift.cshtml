@model Nepaltech.Models.Forms.BatchShiftModel
@{
    ViewBag.Title = "Shift";
}

<h2>Shift</h2>
<form action="@(Url.Action("Shift"))" method="post" class="nt-form" id="form-add-batchchicken">
    @Html.HiddenFor(m=>m.BatchId)
    @Html.HiddenFor(m=>m.BatchCode)
    <div class="row">
        <div class="col-md-offset-0 col-md-3"> <div> <label class="control-label" for="BatchId"> Batch Id </label> </div> </div>
        <div class="col-md-offset-0 col-md-6">
            @Html.DisplayFor(m=>m.BatchCode)
            @*@(Html.Kendo().DropDownList()
              .Name("BatchId")
              .HtmlAttributes(new { style = "width:100%" })
              .OptionLabel("Select Batch...")
              .DataTextField("BatchCode").Template("#=BatchCode# - #=RoomsCount# Rooms")
              .DataValueField("Id")
              .DataSource(source =>
              {
                  source.Read(read =>
                  {
                      read.Action("GetCascadeBatch", "AddChicken");
                  });
              })
            )
            @Html.ValidationMessageFor(model => model.BatchId, "", new { @class = "text-danger" })*@
        </div>
    </div>

    <div class="row">
        <div class="col-md-offset-0 col-md-3"> <div> <label class="control-label" for="FarmId">Select Farm</label> </div> </div>
        <div class="col-md-offset-0 col-md-6">
            @*<select class="form-control" id="inlineFormCustomSelect"> <option selected>Drop down...</option> <option value="1">One</option> <option value="2">Two</option> <option value="3">Three</option> </select>*@
            <div>
                @*@Html.DropDownList("farmId", null, new { @class = "form-control" })*@
                @(Html.Kendo().DropDownList()
              .Name("FarmId")
              .HtmlAttributes(new { style = "width:100%" })
              .OptionLabel("Select farm...")
              .DataTextField("FarmName")
              .DataValueField("Id")
              .DataSource(source =>
              {
                  source.Read(read =>
                  {
                      read.Action("GetCascadeFarms", "AddChicken");
                  });
              })
                )
                @Html.ValidationMessageFor(model => model.FarmId, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <br />

    <div class="row">
        <div class="col-md-offset-0 col-md-3"> <div> <label class="control-label" for="BuildingId">Select Building</label> </div> </div>
        <div class="col-md-offset-0 col-md-6">

            @(Html.Kendo().DropDownList()
              .Name("BuildingId")
              .HtmlAttributes(new { style = "width:100%" })
              .OptionLabel("Select Building...")
              .DataTextField("BuildingName")
              .DataValueField("Id")
              .DataSource(source =>
              {
                  source.Read(read =>
                  {
                      read.Action("GetCascadeBuilding", "AddChicken")
                          .Data("filterProducts");
                  })
                  .ServerFiltering(true);
              })
              .Enable(false)
              .AutoBind(false)
              .CascadeFrom("FarmId")
            )
            @Html.ValidationMessageFor(model => model.BuildingId, "", new { @class = "text-danger" })
            @*<select class="form-control" id="inlineFormCustomSelect"> <option selected>Drop down...</option> <option value="1">One</option> <option value="2">Two</option> <option value="3">Three</option> </select>*@

        </div>
    </div>

    <div class="row">
        <div class="col-md-offset-0 col-md-3"> <div> <label class="control-label" for="LocationId">Select Location</label> </div> </div>
        <div class="col-md-offset-0 col-md-6">
            @(Html.Kendo().DropDownList()
              .Name("LocationId")
              .HtmlAttributes(new { style = "width:100%" })
              .OptionLabel("Select Room...")
              .DataTextField("LocationName")
              .DataValueField("Id")
              .DataSource(source =>
              {
                  source.Read(read =>
                  {
                      read.Action("GetCascadeLocations", "AddChicken")
                          .Data("filterProduct");
                  })
                  .ServerFiltering(true);
              })
              .Enable(false)
              .AutoBind(false)
              .CascadeFrom("BuildingId")
            )
            @Html.ValidationMessageFor(model => model.LocationId, "", new { @class = "text-danger" })


            @*<select class="form-control" id="inlineFormCustomSelect"> <option selected>Drop down...</option> <option value="1">One</option> <option value="2">Two</option> <option value="3">Three</option> </select>*@

        </div>
    </div>

    <div class="row">
        <div class="col-md-offset-0 col-md-3"> <div> <label class="control-label" for="TotalMale">Total Male</label> </div> </div>
        <div class="col-md-offset-0 col-md-6">
            <div>
                @*@Html.TextBoxFor(m => m.TotalMale, new { @class = "form-control" })*@
                @Html.Kendo().TextBoxFor(m => m.TotalMale)
                @Html.ValidationMessageFor(model => model.TotalMale, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <br />

    <div class="row">
        <div class="col-md-offset-0 col-md-3"> <div> <label class="control-label" for="TotalFemale">Total Female</label> </div> </div>

        <div class="col-md-offset-0 col-md-6">
            <div>
                @Html.Kendo().TextBoxFor(m => m.TotalFemale)
                @Html.ValidationMessageFor(model => model.TotalFemale, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <br />

    <div class="row">
        <div class="col-md-offset-0 col-md-3"> <div> <label class="control-label" for="Shift">Date Shifted</label> </div> </div>

        <div class="col-md-offset-0 col-md-6">
            <div>
               @(Html.Kendo().DatePickerFor(m=>m.ShiftedDate)
                  .Value(DateTime.Now)
                  .HtmlAttributes(new { style = "width: 100%", title = "datepicker" })
            )
                @Html.ValidationMessageFor(model => model.ShiftedDate, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    @Html.HiddenFor(m=>m.PreviousMale)
    @Html.HiddenFor(m => m.PreviousFemale)
    @Html.HiddenFor(m=>m.PreviousBuildingId)
    @Html.HiddenFor(m=>m.PreviousLocationId)
    @*@Html.HiddenFor(m=>m.Id)*@
    @Html.HiddenFor(m => m.ParentId)

    <div>
        <input type="submit" value="Save" class="btn btn-default" />
        @*@Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-primary" })*@
    </div>
</form>



